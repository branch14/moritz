// AS extensions// collected by me@der-mo.nettrace("extensions.as loaded");//Array.prototype.walk = function(fn) {	for(var i = 0; i<this.length; i++) {		fn(this[i]);	}};ASSetPropFlags(Array.prototype,["walk"],1); Array.prototype.peek = function() {	return this[this.length-1];};ASSetPropFlags(Array.prototype,["peek"],1);Array.prototype.remove = function(o) {	for(var i=0;i<this.length;i++){		if(this[i]==o) {			this.splice(i,1);			return true;		};	}	return false;};ASSetPropFlags(Array.prototype,["remove"],1);//// multi-property changeObject.prototype.adoptProps = function(o) {	for(var i in o) {		this[i] = o[i];	}};ASSetPropFlags(Object.prototype,["adoptProps"],1);Array.prototype.contains = function(o) {	for(var i=0;i<this.length;i++){		if(this[i]==o) {			return true;		};	}	return false;};ASSetPropFlags(Array.prototype,["contains"],1);